type DPoolList @entity {
  id: ID!
  pools: [DPool!]! @derivedFrom(field: "poolList")
}

type DPool @entity {
  id: ID!
  poolList: DPoolList!
  address: String!
  moneyMarket: String!
  stablecoin: String!
  users: [User!]! @derivedFrom(field: "pools")
  deposits: [Deposit!]! @derivedFrom(field: "pool")
  sponsors: [Sponsor!]! @derivedFrom(field: "pools")
  sponsorDeposits: [SponsorDeposit!]! @derivedFrom(field: "pool")
  totalActiveDeposit: BigDecimal!
  totalHistoricalDeposit: BigDecimal!
  totalInterestPaid: BigDecimal!
  blocktime: BigDecimal!
  UIRMultiplier: BigDecimal!
  MinDepositPeriod: BigInt!
  "Values that need to be updated every block"
  oneYearInterestRate: BigDecimal!
  deficit: BigDecimal!
}

type User @entity {
  id: ID!
  address: String!
  pools: [DPool!]!
  deposits: [Deposit!]! @derivedFrom(field: "user")
  totalActiveDeposit: BigDecimal!
  totalHistoricalDeposit: BigDecimal!
  totalInterestEarned: BigDecimal!
}

type Deposit @entity {
  id: ID!
  user: User!
  pool: DPool!
  amount: BigDecimal!
  maturationTimestamp: BigInt!
  active: Boolean!
  interestEarned: BigDecimal!
}

type Sponsor @entity {
  id: ID!
  address: String!
  pools: [DPool!]!
  deposits: [SponsorDeposit!]! @derivedFrom(field: "sponsor")
  totalActiveDeposit: BigDecimal!
  totalHistoricalDeposit: BigDecimal!
}

type SponsorDeposit @entity {
  id: ID!
  sponsor: Sponsor!
  pool: DPool!
  amount: BigDecimal!
  maturationTimestamp: BigInt!
  active: Boolean!
  data: String!
}